// coding: utf-8
/* Copyright (c) 2013, Roboterclub Aachen e.V.
 * All Rights Reserved.
 *
 * The file is part of the xpcc library and is released under the 3-clause BSD
 * license. See the file `LICENSE` for the full license governing this code.
 */
// ----------------------------------------------------------------------------

#include "../../../device.hpp"

extern "C"
void
xpcc_gpio_enable(void)
{
	// Enable GPIO clock
	RCC->APB2ENR  |=
%% for port in gpios|xpcc.values('port')|sort
%%	if not loop.last
		RCC_APB2ENR_IOP{{ port }}EN |
%%	else
		RCC_APB2ENR_IOP{{ port }}EN;
%%	endif
%% endfor

	// Reset GPIO peripheral
	RCC->APB2RSTR |=
%% for port in gpios|xpcc.values('port')|sort
%%	if not loop.last
		RCC_APB2RSTR_IOP{{ port }}RST |
%%	else
		RCC_APB2RSTR_IOP{{ port }}RST;
%%	endif
%% endfor

	RCC->APB2RSTR &= ~(
%% for port in gpios|xpcc.values('port')|sort
%%	if not loop.last
		RCC_APB2RSTR_IOP{{ port }}RST |
%%	else
		RCC_APB2RSTR_IOP{{ port }}RST);
%%	endif
%% endfor
}
